<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=utf8">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>New Page 1</title>
<meta name="Microsoft Theme" content="blank 000, default">
<meta name="Microsoft Border" content="tlb, default">
</head>

<body bgcolor="#FFFFFF" text="#000000" link="#999999" vlink="#990000" alink="#666666"><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td><!--mstheme--><font face="宋体">

<p align="center"><font size="6"><strong><img src="_derived/native_mode.htm_cmp_blank000_bnr.gif" width="600" height="60" border="0" alt="为Java提速"></strong></font><br>
<a href="debug.htm"><img src="../_derived/back_cmp_blank000_back.gif" width="100" height="20" border="0" alt="上一页" align="middle"></a> <a href="../index.htm"><img src="../_derived/home_cmp_blank000_home.gif" width="100" height="20" border="0" alt="主页" align="middle"></a> <a href="index.htm"><img src="../_derived/up_cmp_blank000_up.gif" width="100" height="20" border="0" alt="上一层" align="middle"></a> <a href="specification.htm"><img src="../_derived/next_cmp_blank000_next.gif" width="100" height="20" border="0" alt="下一页" align="middle"></a></p>

<!--mstheme--></font></td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top" width="1%"><!--mstheme--><font face="宋体">



<!--mstheme--></font></td><td valign="top" width="24"></td><!--msnavigation--><td valign="top"><!--mstheme--><font face="宋体">

<!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull1.gif" width="15" height="15" hspace="13"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">Java程序跨平台特性决定了它必须是解释执行模式，导致的直接结果就是效率低下；<!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull1.gif" width="15" height="15" hspace="13"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">包括Java的编译器（Sun的JDK中的javac），也是用Java写的，每次编译Java源程序，都要使用Java来编译，速度可想而知；<!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull1.gif" width="15" height="15" hspace="13"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">如果使用Java程序进行大量的IO/运算，将是不划算的；<!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull1.gif" width="15" height="15" hspace="13"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">对于数据库的使用，因为大部分数据整理的操作是在数据库端执行，Java负责提出问题和得到结果，效率瓶颈就不在Java端了。<!--mstheme--></font><!--msthemelist--></td></tr>
<!--msthemelist--></table><!--mstheme--><font face="宋体">
<p>现在有两种Java工具：</p>
<!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull1.gif" width="15" height="15" hspace="13"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">使用C++编写的Java编译器<br>
    IBM的Jikes，速度比JDK的javac快过10x的数量级。<br>
    <a href="http://oss.software.ibm.com/developerworks/opensource/jikes/project">http://oss.software.ibm.com/developerworks/opensource/jikes/project</a><!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull1.gif" width="15" height="15" hspace="13"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">可以把Java程序编译为可执行文件<br>
    Redhat的一个项目，正在开发中，我前两天发现后Download下来竟然编译脚本错误。<br>
    <a href="http://sources.redhat.com/java">http://sources.redhat.com/java</a>
    <!--mstheme--></font><table cellpadding="4" width="95%" border="0">
      <tbody>
        <tr bgcolor="#b0d0ff">
          <th align="left"><!--mstheme--><font face="宋体">What is GCJ?<!--mstheme--></font></th>
        </tr>
      </tbody>
    </table><!--mstheme--><font face="宋体">
    GCJ is a portable, optimizing, ahead-of-time compiler for the Java 
    Programming Language. It can compile...
    <!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull2.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">Java source code to native machine code,
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull2.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">Java source code to Java bytecode (class files),
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull2.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">and Java bytecode to native machine code.<!--mstheme--></font><!--msthemelist--></td></tr>
    <!--msthemelist--></table><!--mstheme--><font face="宋体">
    Before executing your compiled application, you must link it with the GCJ 
    runtime, libgcj, which consists of...
    <!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull2.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">the core class libraries,
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull2.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">a garbage collector library,
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull2.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">an abstraction over the system threads,
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/blank/blbull2.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="宋体">and, optionally, a bytecode interpreter.<!--mstheme--></font><!--msthemelist--></td></tr>
    <!--msthemelist--></table><!--mstheme--><font face="宋体">
    The addition of the bytecode interpreter means that GCJ compiled 
    applications can dynamically load and interpret class files, resulting in 
    mixed compiled/interpreted systems.
    <p>Compiled Java applications are debugged using recent versions of the GNU 
    debugger, <a href="http://sources.redhat.com/gdb">GDB</a>. A <a href="http://sources.redhat.com/java/gdb.html">short 
    tutorial</a> on using GDB to debug GCJ-compiled applications is available.
    <p>In addition to regular native programming, GCJ can be configured as a 
    cross-compiler, suitable for embedded systems programming.
    <p>Gcj, libgcj, gdb and related tools are <a href="http://www.gnu.org/philosophy/free-sw.html">Free 
    Software</a>. <!-- They are part of the <a href="http://www.gnu.org">GNU Project</a>, and released under the aegis of GNU.-->
  <!--mstheme--></font><!--msthemelist--></td></tr>
<!--msthemelist--></table><!--mstheme--><font face="宋体">
<p>　</p>
　

<!--mstheme--></font><!--msnavigation--></td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td><!--mstheme--><font face="宋体">

<p align="right">

<!--mstheme--></font></td></tr><!--msnavigation--></table></body>

</html>
